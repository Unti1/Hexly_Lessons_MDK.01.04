# Для того чтобы импортировать модуль(сам py-файл) мы используем конструкцию import *путь до пакета\модуль*

import test_module
# Как мы вызываем функции из другого модуля?
# Для того чтобы вызывать функцию\объект из другого модуля, мы сперва обращаемся к этому модулю и затем вызываем нужный объект или функцию через точку

print(f'{test_module.addition(10, 20)=}')
# Правило: py-файл относительно которого мы делаем импорт, должен находится либо на одном уровне с главным запускаемым py-файлом, либо в подпапке относительно этого же пути
 
# В ситуациях когда вам нужно будет взять какой то конкретный метод или функцию или объект из модуля, вы можете использовать конструкцию
# from *модуль\путь до пакета* import *имя объекта или функции*

# from test_module import addition, multiply, hello # Если вставляемых объектов должно быть несколько то можно перечислить их через запятую
# В таком случае, нам больше не нужно использовать имя модуля перед вызовом объекта или функции которые нам нужны

# print(f'{addition(10, 20)=}')
# print(f'{multiply(10, 20)=}')

# Также, мы можем переименовывать модули, под свои названия

import test_module as tm
print(f'{tm.addition(10, 20)=}')

# Также можно и с from конструкцией
from test_module import addition as add, multiply as mul
print(f'{add(10, 20)=}')
print(f'{mul(10, 20)=}')

# В ситуациях когда вам нужно добавить все функции,объекта, ну и иными словами всё содержимое модуля мы используем "*"

from test_module import *

print(f'{addition(10, 20)=}')
print(f'{multiply(10, 20)=}')
hello('Bob')



print(globals())